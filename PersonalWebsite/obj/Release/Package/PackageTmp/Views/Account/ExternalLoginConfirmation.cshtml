@model Blog.Models.ExternalLoginConfirmationViewModel
@using Blog.Controllers

<div id="externalLogin">
    <h2>@ViewBag.Title</h2>
    <h3>Associate your @ViewBag.LoginProvider account</h3>

    @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
        @Html.AntiForgeryToken()

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <p>
            You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
            Please pick a username and an email and click the Register button to finish
            logging in.
        </p>
                <div class="form-group">
                    <div class="col-sm-8">
                        @Html.LabelFor(m => m.UserName)
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Username", @id="pickUserName"})
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        <br />
                    </div>
                    <div class="col-sm-8">
                        @Html.LabelFor(m => m.Email)
                        @if (Model.Email == null) {
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email", @id = "pickUserName" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Model.Email", @id = "pickUserName" })
                        }
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <input type="submit" class="btn btn-flat btn-md" value="Register" />      
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}